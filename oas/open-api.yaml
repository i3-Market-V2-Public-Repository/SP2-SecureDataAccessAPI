openapi: 3.0.0
info:
  description: Express DataTransferManagement API Server
  version: 0.0.1
  title: Data Access API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Agreement & Market fee
    description: Agreement & Market fee
  - name: Batch Data
    description: Get batch data
  - name: Stream Data
    description: Data streamed from broker
  - name: Authenticate Stream Data Consumer
    description: Endpoints that the broker uses to authenticate the consumer
  - name: Data Transfer Report
    description: Get report about the data that was transfered
  - name: Authenticate
    description: Get access token required for retrieving data
paths:
  /batch/{data}/{agreement_id}:
    post:
      tags:
        - Batch Data
      summary: Get data
      description: ''
      parameters:
        - in: path
          name: data
          schema:
            type: string
          required: true
          description: Name of the resource
        - in: path
          name: agreement_id
          schema:
            type: string
          required: true
          description: The id of the data offering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - block_id
                - block_ack
              properties:
                block_id:
                  type: string
                block_ack:
                  type: string
        description: In the first call block_id and block_ack should have the value null
      responses:
        '200':
          description: Response that contains the block id, the next block id, cipherblock and poO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessResponse'
        '401':
          description: Access token is missing or invalid
        '404':
          description: File not found
        '500':
          description: Internal server error
      security:
        - bearerAuth: []
  /validatePoR:
    post:
      tags:
        - Batch Data
      summary: Validate proof of receipt
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - poR
              properties:
                poR:
                  type: string
        description: Send the proof of receipt generated by the client
      responses:
        '200':
          description: Proof of receipt validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWK'
  /streamingAccountReport/{sub_id}:
    get:
      tags:
        - Data Transfer Report
      summary: Get report for streaming data
      parameters:
        - in: path
          name: sub_id
          schema:
            type: string
          required: true
          description: The subscription id
      responses:
        '200':
          description: Invoice call created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
  /accountDataBlock/{exchange_id}:
    get:
      tags:
        - Data Transfer Report
      summary: Get report for a single block of data
      parameters:
        - in: path
          name: exchange_id
          schema:
            type: string
          required: true
          description: The exchange id found in the proof of publication
      responses:
        '200':
          description: Invoice call created
  /getAgreementId/{exchange_id}:
    get:
      tags:
        - Agreement & Market fee
      summary: Get report agreement id
      parameters:
        - in: path
          name: exchange_id
          schema:
            type: string
          required: true
          description: The exchange id found in the proof of publication
      responses:
        '200':
          description: Invoice call created
  /payMarketFee/{offering_id}:
    post:
      tags:
        - Agreement & Market fee
      summary: Pay the market fee before the data transfer
      parameters:
        - in: path
          name: offering_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - senderAddress
                - providerAddress
              properties:
                senderAddress:
                  type: string
                providerAddress:
                  type: string
      responses:
        '200':
          description: Invoice call created
  /dataExchangeAgreement:
    post:
      tags:
        - Agreement & Market fee
      summary: Get the public key of the provider
      parameters:
        - in: path
          name: offering_id
          schema:
            type: string
          required: true
          description: The offering id found in the agreement
      responses:
        '200':
          description: Invoice call created
  /requestAccountSummary/{consumer_did}:
    get:
      tags:
        - Data Transfer Report
      summary: Get report for the account
      parameters:
        - in: path
          name: consumer_did
          schema:
            type: string
          required: true
          description: The consumer did
      responses:
        '200':
          description: Invoice call created
  /getSubscriptionId/{consumer_did}/{data_source_uid}:
    get:
      tags:
        - Data Transfer Report
      summary: Get subscription Id for stream data
      parameters:
        - in: path
          name: consumer_did
          schema:
            type: string
          required: true
          description: consumer_did
        - in: path
          name: data_source_uid
          schema:
            type: string
          required: true
          description: data_source_uid
      responses:
        '200':
          description: Invoice call created
  /regds:
    post:
      tags:
        - Stream Data
      summary: Register a datasource
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Uid
                - Description
                - URL
                - Action
              properties:
                Uid:
                  type: string
                Description:
                  type: string
                URL:
                  type: string
                Action:
                  type: string
        description: Create invoice call
      responses:
        '200':
          description: Data Source registered
  /newdata/{uid}:
    post:
      tags:
        - Stream Data
      summary: Endpoint that receives data from data source and then sent to broker
      parameters:
        - in: path
          name: uid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: Endpoint that receives data from data source and then sent to broker
      responses:
        '200':
          description: Data sent to broker
  /user:
    post:
      tags:
        - Authenticate Stream Data Consumer
      summary: Broker subscriber authentication
      parameters: []
      responses:
        '200':
          description: OK
      security:
        - bearerAuth: []
  /acl:
    post:
      tags:
        - Authenticate Stream Data Consumer
      summary: Broker topic validation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientid
                - topic
              properties:
                clientid:
                  type: string
                topic:
                  type: string
      responses:
        '200':
          description: OK
      security:
        - bearerAuth: []
  /oidc/login/consumer:
    get:
      tags:
        - Authenticate
      summary: Authenticate as consumer
      parameters: []
      responses:
        '200':
          description: Connect to this endpoint directly from a browser to authenticate using the i3m wallet.
  /oidc/login/provider:
    get:
      tags:
        - Authenticate
      summary: Authenticate as provider
      parameters: []
      responses:
        '200':
          description: Connect to this endpoint directly from a browser to authenticate using the i3m wallet.
components:
  schemas:
    DataAccessResponse:
      title: DataAccessResponse
      type: object
      properties:
        block_id:
          type: string
        next_block_id:
          type: string
        cipherblock:
          type: string
        poO:
          type: string
    JWK:
      title: JWK
      type: object
      properties:
        jwk:
          type: object
          properties:
            kty:
              type: string
            k:
              type: string
            kid:
              type: string
            alg:
              type: string
        poP:
          type: object
          properties:
            id:
              type: integer
            dataHash:
              type: string
            readyForRegistration:
              type: boolean
    Invoice:
      title: Invoice
      type: object
      properties:
        ConsumerID:
          type: string
        CompanyName:
          type: string
        VAT:
          type: string
        ContractID:
          type: string
        NumBlock:
          type: string
        BlockSize:
          type: string
        BlockPrice:
          type: string
        TotalAmount:
          type: string
    Report:
      title: report
      type: object
      properties:
        consumer_id:
          type: string
        data_source_uid:
          type: string
        sub_id:
          type: string
        timestamp:
          type: string
        ammount_of_data_received:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
servers:
  - url: /
  - url: http://95.211.3.244:3100
  - url: http://95.211.3.249:3100
  - url: http://95.211.3.250:3100
  - url: http://95.211.3.251:3100
    variables: {}
